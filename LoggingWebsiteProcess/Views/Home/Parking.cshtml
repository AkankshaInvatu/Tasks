@model IEnumerable<LoggingWebsiteProcess.Models.ParkingModel>

@{
    ViewData["Title"] = "Parking";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Parking Details</title>
</head>
<body>
    <h3 id="currentDateHeading"></h3>

    <ul id="parkingList"></ul>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
        const sessionsCount = {};
        const parkingIds = []; // Array to store parking IDs already added to the list
        let currentDate; // Variable to store today's date
        let lastResetTime; // Variable to store the last session count reset time
        let midnightTimeout; // Timeout reference to reset session count at midnight

        // Function to format date in 'YYYY-MM-DD' UTC format
        const getUTCDate = () => new Date().toISOString().split('T')[0];

        // Function to reset session count and update current date
        const resetSessionCount = () => {
            // Get the current date
            const currentDateObj = new Date();
            const currentDateUTC = currentDateObj.toISOString().split('T')[0];
            // Update current date
            currentDate = currentDateUTC;

            // Get the previous day's date
            const previousDateObj = new Date(currentDateObj);
            previousDateObj.setDate(previousDateObj.getDate() - 1);
            const previousDateUTC = previousDateObj.toISOString().split('T')[0];

            // Create a new date object with the previous day's date and time set to 23:59:59 (just before midnight)
            const lastResetTimeDate = new Date(previousDateUTC);
            lastResetTimeDate.setUTCHours(23, 59, 59, 0); // Set time to 23:59:59 (just before midnight)
            lastResetTime = lastResetTimeDate.toUTCString(); // Update last reset time

            // Update displayed date and last reset time in heading
            $('#currentDateHeading').text(`Today's Date: ${currentDate}, Last Session Count Reset Time: ${lastResetTime}`);

            // Clear the parkingIds array
            parkingIds.length = 0;

            // Reset session count for all parking IDs
            Object.keys(sessionsCount).forEach(key => sessionsCount[key] = 0);

            // Schedule the next reset at midnight
            const now = new Date();
            const midnight = new Date(now);
            midnight.setUTCHours(24, 0, 0, 0);
            const timeUntilMidnight = midnight - now;
            midnightTimeout = setTimeout(resetSessionCount, timeUntilMidnight);
        };

        // Initialize session count reset
        resetSessionCount();

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/parkingHub")
            .configureLogging(signalR.LogLevel.Information)
            .build();

        connection.start().catch(err => console.error(err.toString()));

        connection.on("ReceiveUserData", function (parkingString) {
            const parking = JSON.parse(parkingString);
            const parkingId = parking.ParkingId;

            // Check if the date has changed since the last session count reset
            const now = getUTCDate();
            if (now !== currentDate) {
                // Reset session count and update current date
                resetSessionCount();
            }

            // If parking ID is not in the list, add it and increment its session count
            if (!parkingIds.includes(parkingId)) {
                parkingIds.push(parkingId);
                sessionsCount[parkingId] = 1; // Start count from 1
                const listItem = `<li data-parking-id="${parkingId}">Parking ID: ${parkingId}, Sessions :${sessionsCount[parkingId]}</li>`;
                $('#parkingList').append(listItem);
            } else {
                // Increment session count for existing parking ID
                sessionsCount[parkingId]++;
                // Update session count in the existing list item
                $(`#parkingList li[data-parking-id="${parkingId}"]`).text(`Parking ID: ${parkingId}, Sessions: ${sessionsCount[parkingId]}`);
            }
        });
    </script>
</body>
</html>

